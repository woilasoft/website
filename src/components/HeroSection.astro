---
// import GridPattern from "./ui/grid-pattern";
import { cn } from "@/lib/utils";
import { ChevronRight } from "lucide-react";
import AnimatedGradientText from "./ui/animated-gradient-text"; // Assuming .astro if it contains Astro-specific logic or only used in Astro
import ShimmerButton from "./ui/shimmer-button"; // Assuming .astro
import AnimatedGridPattern from "@/components/ui/animated-grid-pattern"; // Assuming .astro

import { useTranslations, type Lang } from "@/i18n";
import { getRelativeLocaleUrl } from "astro:i18n";

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

// Translations
const translations = {
  introduction: {
    en: "Introducing Woilasoft",
    fr: "Introduction Woilasoft",
  },
  mainHeading: {
    en: "Let's innovate together!",
    fr: "Innovons ensemble !",
  },
  paragraph1: {
    en: "your partner for custom digital solutions. We create the digital solutions of ",
    fr: "votre partenaire pour des solutions num√©riques et personnalis√©es. Nous cr√©ons les solutions num√©riques de ",
  },
  p2_start: {
    en: "",
    fr: "",
  },
  p2_tomorrow: {
    en: "tomorrow",
    fr: "demain",
  },
  p2_middle: {
    en: " starting ",
    fr: " d√®s ",
  },
  p2_today: {
    en: "today",
    fr: "aujourd'hui",
  },
  p2_end: {
    en: "!",
    fr: "!.",
  },
  paragraph3: {
    en: "Whether you are a startup or an established company, we are here to help you transform your digital presence.",
    fr: "Que vous soyez une start-up ou une entreprise √©tablie, nous sommes l√† pour vous aider √† transformer votre pr√©sence num√©rique.",
  },
  seeProjects: {
    en: "See our projects",
    fr: "Voir nos projets",
  },
  contactUs: {
    en: "Contact us",
    fr: "Nous contacter", // Corrected French
  },
};
---

<div
  class="relative screen-wrapper flex h-[80vh] max-sm:h-[70vh] w-full flex-col items-center justify-center bg-background"
>
  <AnimatedGridPattern
    client:load
    numSquares={30}
    maxOpacity={0.1}
    duration={3}
    repeatDelay={1}
    className={cn(
      "[mask-image:radial-gradient(500px_circle_at_center,white,transparent)]",
      "inset-x-0 inset-y-[-30%] h-[200%] skew-y-12"
    )}
  />
  <div class="py-5">
    <AnimatedGradientText>
      üéâ <hr class="mx-2 h-4 w-px shrink-0 bg-gray-300" />{" "}
      <span
        class={cn(
          `inline animate-gradient bg-gradient-to-r from-[#ffaa40] via-[#9c40ff] to-[#ffaa40] bg-[length:var(--bg-size)_100%] bg-clip-text text-transparent`
        )}
      >
        {t(translations.introduction)}
      </span>
      <ChevronRight
        className="ml-1 size-3 transition-transform duration-300 ease-in-out group-hover:translate-x-0.5"
      />
    </AnimatedGradientText>
  </div>

  <h1
    class="text-3xl font-extrabold tracking-tight text-gray-900 sm:text-6xl text-center"
  >
    {t(translations.mainHeading)}
  </h1>
  <p
    class="mt-6 max-sm:text-normalsize max-sm:w-full max-w-screen-lg lg:text-xl text-gray-600 text-center"
  >
    <!-- <span class="font-bold">Woilasoft</span>, {t(translations.paragraph1)}{" "}
    {t(translations.p2_start)}<span class="line-through"
      >{t(translations.p2_tomorrow)}</span
    >{t(translations.p2_middle)}<strong class="font-bold"
      ><br />{t(translations.p2_today)}</strong
    >
    <span class="max-sm:hidden">{t(translations.paragraph3)}</span> -->
    <span class="font-bold">Woilasoft</span>, {t(translations.paragraph1)}
    <span class="line-through">{t(translations.p2_tomorrow)}</span>, {
      t(translations.p2_middle)
    }
    <strong class="font-bold">{t(translations.p2_today)}</strong>!. <span
      class="max-sm:hidden">{t(translations.paragraph3)}</span
    >
  </p>
  <div class="flex items-center gap-4 mt-8">
    {/* Added mt-8 for spacing */}
    <a
      href={getRelativeLocaleUrl(locale, "/projects")}
      class="relative inline-flex items-center px-12 py-3 max-sm:!px-3 max-sm:!py-2 overflow-hidden font-medium text-secondary border-2 border-secondary rounded-full hover:text-white group hover:bg-gray-50"
    >
      <span
        class="absolute left-0 block w-full h-full transition-all bg-transparent opacity-100 group-hover:bg-secondary top-0 duration-400 ease"
      ></span>
      <span
        class="absolute right-0 flex items-center max-sm:hidden justify-start w-10 h-10 duration-300 transform translate-x-full group-hover:translate-x-0 ease"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
        </svg>
      </span>
      <span class="relative text-lg max-sm:text-[1em] whitespace-nowrap">
        {t(translations.seeProjects)}
      </span>
    </a>
    <a href={getRelativeLocaleUrl(locale, "/contact")}>
      <ShimmerButton
        className="my-5 max-sm:!px-3 max-sm:!py-2"
        background={"#0d1961"}
      >
        <span class="text-lg max-sm:!text-[1em] whitespace-nowrap">
          {t(translations.contactUs)}
        </span>
      </ShimmerButton>
    </a>
  </div>
</div>
<style>
  .circle-sketch-highlight {
    position: relative;
  }

  .circle-sketch-highlight:before {
    content: "";
    z-index: -1;
    left: -0.5em;
    top: -0.1em;
    border-width: 2px;
    border-style: solid;
    border-color: red;
    position: absolute;
    border-right-color: transparent;
    width: 100%;
    height: 1em;
    transform: rotate(2deg);
    opacity: 0.7;
    border-radius: 50%;
    padding: 0.1em 0.25em;
  }

  .circle-sketch-highlight:after {
    content: "";
    z-index: -1;
    left: -0.5em;
    top: 0.1em;
    padding: 0.1em 0.25em;
    border-width: 2px;
    border-style: solid;
    border-color: red;
    border-left-color: transparent;
    border-top-color: transparent;
    position: absolute;
    width: 100%;
    height: 1em;
    transform: rotate(-1deg);
    opacity: 0.7;
    border-radius: 50%;
  }
  strong {
    position: relative;

    &::after {
      content: "";
      position: absolute;
      bottom: -0.125rem;
      left: -0.5rem;
      right: -0.5rem;
      height: 0.75rem;
      z-index: -1;
      background-image: url("/underline.svg");
      background-repeat: no-repeat;
      background-size: cover;
    }
  }

  p > strong {
    &::after {
      bottom: -0.2rem;
      height: 0.5rem;
      left: -0.25rem;
      right: -0.25rem;
    }
  }
</style>
